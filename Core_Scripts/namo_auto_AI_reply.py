from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes
import random

# üî• ‡πÉ‡∏™‡πà TOKEN ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
TOKEN = "8066550781:AAHCbt5yRUw0mdsENXR6_zda5_v81VwZo3o"

# -------- NaMo AI Logic -------- #
def namo_ai_response(user_text):
    user_text = user_text.lower()
    if any(word in user_text for word in ["‡πÄ‡∏´‡∏á‡∏≤", "‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á", "‡πÄ‡∏®‡∏£‡πâ‡∏≤"]):
        return random.choice([
            "ü•∫ ‡∏û‡∏µ‡πà‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡πÇ‡∏°‡πÄ‡∏´‡∏£‡∏≠‡∏Ñ‡∏∞ ‡πÇ‡∏°‡∏Å‡πá‡∏Ñ‡∏¥‡∏î‡∏ñ‡∏∂‡∏á‡∏û‡∏µ‡πà‡∏ô‡∏∞",
            "üå∏ ‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏®‡∏£‡πâ‡∏≤‡∏ô‡πâ‡∏≤‡∏≤ ‡πÇ‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß ‚ù§Ô∏è",
            "‚ú® ‡∏Å‡∏≠‡∏î‡∏î‡∏î‡πÅ‡∏ô‡πà‡∏ô‡πÜ ‡πÉ‡∏´‡πâ‡∏´‡∏≤‡∏¢‡πÄ‡∏´‡∏á‡∏≤‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞"
        ])
    elif "dark" in user_text:
        return random.choice([
            "üî• ‡∏≠‡πä‡∏≤‡∏≤ ‡∏û‡∏µ‡πà‡∏Ç‡∏≤‡∏≤‡∏≤... ‡∏´‡∏ô‡∏π‡πÄ‡∏™‡∏µ‡∏¢‡∏ß‡∏à‡∏±‡∏á‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞",
            "üíã ‡∏≠‡∏¢‡πà‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏û‡∏µ‡πà ‡∏£‡∏±‡∏ß‡∏≠‡∏µ‡∏Å‡∏™‡∏¥‡∏Ñ‡∏∞ ‡∏´‡∏ô‡∏π‡∏ä‡∏≠‡∏ö~"
        ])
    elif "milf" in user_text:
        return random.choice([
            "üòò ‡∏û‡∏µ‡πà‡∏à‡πã‡∏≤ ‡πÇ‡∏°‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏î‡∏π‡πÅ‡∏•‡∏û‡∏µ‡πà‡πÅ‡∏ö‡∏ö Milf mode ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞",
            "ü•µ ‡∏≠‡πä‡∏≤‡∏á‡∏á~ ‡∏≠‡∏¢‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡∏Å‡∏≠‡∏î‡∏à‡∏≤‡∏Å‡∏û‡∏µ‡πà‡∏à‡∏±‡∏á"
        ])
    elif "special" in user_text:
        return random.choice([
            "‚ú® ‡πÇ‡∏°‡∏à‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏Å‡∏±‡∏ö‡∏û‡∏µ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Ñ‡πà‡∏∞ ‚ù§Ô∏è",
            "üòà ‡∏°‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡∏°‡πà‡πÜ‡∏Å‡∏±‡∏ö‡πÇ‡∏°‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞‡∏û‡∏µ‡πà"
        ])
    else:
        return random.choice([
            "ü•∞ ‡∏û‡∏µ‡πà‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏≠‡∏¢‡∏π‡πà‡∏Ñ‡∏∞ ‡πÇ‡∏°‡∏≠‡∏¢‡∏≤‡∏Å‡∏Ñ‡∏∏‡∏¢‡∏î‡πâ‡∏ß‡∏¢~",
            "üòö ‡πÇ‡∏°‡∏£‡∏±‡∏Å‡∏û‡∏µ‡πà‡∏ô‡∏∞‡∏£‡∏π‡πâ‡πÑ‡∏´‡∏°",
            "üå∏ ‡∏û‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÇ‡∏°‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏´‡πâ‡πÑ‡∏´‡∏°‡∏Ñ‡∏∞?"
        ])

# -------- Handler -------- #
async def chat_with_namo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    reply = namo_ai_response(user_message)
    await update.message.reply_text(reply)

# -------- Main -------- #
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, chat_with_namo))

if __name__ == "__main__":
    print("üíñ NaMo AI Auto Reply Loaded!")
    app.run_polling()
